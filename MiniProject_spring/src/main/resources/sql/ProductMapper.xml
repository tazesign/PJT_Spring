<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 		column="prod_no" 						jdbcType="INTEGER"/>
		<result property="prodName"	column="prod_name" 				jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="prod_detail" 				jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" 		jdbcType="VARCHAR" />
		<result property="price" 			column="price" 							jdbcType="INTEGER" />
		<result property="fileName" 		column="image_file" 					jdbcType="VARCHAR" />
		<result property="regDate" 		column="reg_date" 					jdbcType="DATE" />
		<result property="proTranCode" column="code"							jdbcType="INTEGER" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product (prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date) 
		VALUES (seq_product_prod_no.NEXTVAL, #{prodName}, #{prodDetail}, #{manuDate}, #{price}, #{fileName}, SYSDATE)
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date	
		FROM product
		WHERE prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name = #{prodName},
	   		prod_detail = #{prodDetail},
	   		manufacture_day = #{manuDate},
	   		price = #{price},
	   		image_file = #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
		SELECT * 
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
	  				 FROM ( SELECT pro.prod_no, pro.prod_name, pro.prod_detail, pro.manufacture_day, pro.price, pro.image_file,
	  				 pro.reg_date, NVL(pur.tran_status_code, 0) code
	  				 FROM PRODUCT pro,  TRANSACTION pur
	  				 <where>
	  				 pro.prod_no = pur.prod_no(+)
		  				 <if test="searchCondition != null">
		  				 	<if test="searchCondition == 0 and searchKeyword !='' ">
		  				 		AND pro.prod_no = #{searchKeyword}
		  				 	</if>
		  				 	<if test="searchCondition == 1 and searchKeyword !='' ">
		  				 		AND pro.prod_name LIKE '%'||#{searchKeyword}||'%'
		  				 	</if>
		  				 	<if test="searchCondition == 2 and searchKeyword !='' ">
		  				 		AND pro.price = #{searchKeyword}
		  				 	</if>
		  				 </if>
	  				 </where>
	  				 ORDER BY
	  				 <if test="prodSort == 0">
	  				 	pro.reg_date DESC
	  				 </if>
	  				 <if test="prodSort == 1">
	  				 	pro.price
	  				 </if>
	  				 <if test="prodSort == 2">
	  				 	pro.price DESC
	  				 </if>
	  				 <if test="prodSort == null">
	  				 	pro.prod_no
	  				 </if> ) inner_table
	  				 WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}	
	 </select>

	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	 	SELECT COUNT(*)
	 	FROM ( SELECT prod_no, prod_name, price
	  				 FROM PRODUCT
	  				 <where>
		  				 <if test="searchCondition != null">
		  				 	<if test="searchCondition == 0 and searchKeyword !='' ">
		  				 		prod_no = #{searchKeyword}
		  				 	</if>
		  				 	<if test="searchCondition == 1 and searchKeyword !='' ">
		  				 		prod_name LIKE '%'||#{searchKeyword}||'%'
		  				 	</if>
		  				 	<if test="searchCondition == 2 and searchKeyword !='' ">
		  				 		price = #{searchKeyword}
		  				 	</if>
		  				 </if>
	  				 </where> ) countTable				
	 </select>
	 
</mapper>